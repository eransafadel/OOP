#include "Pixel.h"
//---------------Pixel()---------------------------------
Pixel::Pixel()
	:m_color(WHITE)
{
}
//-----------------------------------------------------------

//----------------~Pixel()-----------------------------------
Pixel::~Pixel()
{
}
//------------------------------------------------------------

//-------------operator==------------------------------------
bool operator==(const Pixel & p1, const Pixel & p2)
{
	return (p1.getColor() == p2.getColor());
}
//-------------------------------------------------------------

//------------operator!=----------------------------------------
bool operator!=(const Pixel & p1, const Pixel & p2)
{
	return !(p1 == p2);
}
//---------------------------------------------------------------

//---------------operator<<--------------------------------------
std::ostream & operator<<(std::ostream & os, const Pixel & image)
{
	os << image.getColor();
	return os;
}
//----------------------------------------------------------------

//---------------operator>>---------------------------------------
std::istream & operator>>(std::istream & is, Pixel & other)
{
	unsigned char c;
	is >> c;
	other.setColor(c);
	return is;
}
//--------------------------------------------------------------

//------------------------operator|-----------------------------
 Pixel operator|(const Pixel & p1, const Pixel & p2)
{
	if (p1 == p2)
		return p1;
	if (p1.getColor() > p2.getColor())
		return p1;
	return p2;
}
 //--------------------------------------------------------------

 //--------------------operator|=--------------------------------
Pixel&  operator|=(Pixel & p1, const Pixel & p2)
{
	return p1 = p1 | p2;
}
//---------------------------------------------------------------

//---------------------operator&---------------------------------
 Pixel operator&(const Pixel & p1, const Pixel & p2)
{
	if (p1 == p2)
		return p1;
	if (p1.getColor() > p2.getColor())
		return p2;
	return p1;
}
 //--------------------------------------------------------------

 //------------------operator&=----------------------------------
Pixel& operator&=(Pixel & p1, const Pixel & p2)
{
	return p1 = p1 & p2;
}
//--------------------------------------------------------------